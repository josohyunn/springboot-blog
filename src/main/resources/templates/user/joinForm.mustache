{{> /layout/header}}
<div class="container p-5">
  <!-- 요청을 하면 localhost:8080/join POST로 요청됨
    username=사용자입력값&password=사용자값&email=사용자입력값 -->
  <div class="card">
    <div class="card-header"><b>회원가입을 해주세요</b></div>
    <div class="card-body">
      <form
        action="/join"
        method="post"
        enctype="application/x-www-form-urlencoded"
        onsubmit="return valid()"
      >
        <!-- onsubmit : submit하면 반드시 onsubmit의 valid()가 실행하고 submit 실행됨 -->
        <!-- 프론트 유효성검사는 전부 onsubmit으로 한다 -->
        <!-- valid의 return이 true면 submit이 실행된다. -->

        <div class="mb-3">
          <input
            type="text"
            class="form-control"
            id="username"
            placeholder="Enter username"
            name="username"
            required
            maxlength="20"
            onchange="usernameChange()"
          />
          <button type="button" onclick="check()">중복체크</button>
        </div>
        <div class="mb-3">
          <input
            type="password"
            class="form-control"
            placeholder="Enter password"
            name="password"
            required
            maxlength="20"
          />
        </div>
        <div class="mb-3">
          <input
            type="email"
            class="form-control"
            placeholder="Enter email"
            name="email"
            required
            maxlength="20"
          />
        </div>
        <button type="submit" id="btnJoin" class="btn btn-primary form-control">
          회원가입
        </button>
        <!--폼태그 안에있는 데이터를 submit누르면 모두 전송해줌-->
      </form>
    </div>
  </div>
</div>
<script>
  let usernameSameCheck = false;

  function valid() {
    if (usernameSameCheck) {
      return true;
    } else {
      alert("유저네임 중복체크를 해주세요");
      return false;
    }
  }

  // 책임 : input 태그로부터 usernamd을 가져와서 통신을 요청하고, 중복이 되었는지 확인한다.
  // async : 비동기
  async function check() {
    // 1. DOM으로부터 값 가져오기
    let username = document.querySelector("#username").value;
    //console.log("유저네임", username);

    // 2. 통신하기
    // ` `을 안쓰면 $로 값 못받아온다.
    // await : 기다렸다가 ?
    let response = await fetch(`/check?username=${username}`); // 통신요청. 이벤트큐에 등록됨

    // 3. 파싱하기
    let responseBody = await response.text(); // response.json();
    console.log(responseBody);

    // 4. 상태코드 확인
    let btnJoin = document.querySelector("#btnJoin");
    if (response.status == 200) {
      alert(responseBody);
      usernameSameCheck = true;
    } else {
      alert(responseBody);
      // 5. 비즈니스 로직
      usernameSameCheck = false;
    }
  }
</script>
{{> /layout/footer}}
